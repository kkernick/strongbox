#!/bin/sh

cmdline () { xargs -n 1 -a "/proc/cmdline" | grep "${1}=" | cut -d "=" -f 2; }


destroy() {
  drives=$(zpool status -P $1 | grep /dev | awk '{print $1}')
  zpool destroy -f $1
  for drive in $drive; do
    cat /dev/urandom > $drive
  done;
}

check_duress() {
  input_hash=$(echo $1 | b2sum | awk '{print $1}')
  match_hash=$(echo $2 | cut -d ':' -f 1)
  if [ "${input_hash}" == "${match_hash}" ]; then
    mode=$(echo $2 | cut -d ':' -f 2)
    pool=$(echo $dataset | cut -d / -f 1)
    if [ "${mode}" == "none" ]; then
      echo "Taking no action!"
    elif [ "${mode}" == "tpm" ]; then
      tpm2_clear
    elif [ "${mode}" == "drive" ]; then
      destroy $pool
    elif [ "${mode}" == "nuclear" ]; then
      tpm2_clear
      destroy $pool
    else
      echo "Unrecognized mode, taking no action!"
    fi
  fi
}

# Iterate through every dataset.
for dataset in $(zfs list -Ho name); do

  # Find datasets that are not decrypted, and are their own encryption roots.
  if [ $(zfs get -Ho value keystatus $dataset) != "available" ] && [ "$(zfs get -Ho value encryptionroot $dataset)" == "${dataset}" ]; then

    UNLOCKED=255
    ADDRESS=$(zfs get -Ho value "strongbox:address" $dataset)
    STRATEGY=$(zfs get -Ho value "strongbox:strategy" $dataset)

    if [ -f "/etc/zfs/${dataset}-hash" ]; then
      HASH=$(cat "/etc/zfs/${dataset}-hash")
    fi

    # noboot means we don't decrypt this dataset on boot time.
    if [ "${STRATEGY}" == "none" ]; then
      continue
    fi

    # We only try the enhanced method once. If the TPM/PIN fails, we fallback to the password.
    if [ "${STRATEGY}" == "enhanced" ]; then
      sealing_pin=$(systemd-ask-password "Enter sealing pin for $dataset")
      if [ -n "${HASH}" ]; then check_duress $sealing_pin $HASH $dataset; fi
      echo $sealing_pin | handle.tpm -m unseal -a $ADDRESS -p -e -s | zfs load-key $dataset
      UNLOCKED=$?

    # If we have an address, try and unseal it using the TPM.
    elif [ "${STRATEGY}" == "tpm" ] || [ "${STRATEGY}" == "both" ]; then
      # We persist it so that multiple datasets can be decrypted using the same attested state.
      handle.tpm -m unseal -a $ADDRESS -p | zfs load-key $dataset
      UNLOCKED=$?
    fi

    # Prompt for unlock until the user provides the correct password.
    if [ "${STRATEGY}" == "pin" ] || [ "${STRATEGY}" == "both" ] || [ "${STRATEGY}" == "enhanced" ]; then
      attempt=1
      while [ $attempt -le 3 ] && [ $UNLOCKED -ne 0 ]; do
        pass=$(systemd-ask-password "Enter password for $dataset")
        if [ -n "${HASH}" ]; then check_duress $pass $HASH $dataset; fi
        echo $pass | zfs load-key $dataset
        UNLOCKED=$?
        ((attempt++))
      done
    fi
  fi
done

# We then wipe the PCRs once all decryption has been performed.
if [ "$(cmdline "strongbox.enroll")" != "on" ]; then
  handle.tpm -m erase
else
  echo "System is in enroll mode."
fi

# Make the sysroot to mount the root filesystem.
mkdir /sysroot
mount.zfs $(cmdline "zfs") /sysroot
